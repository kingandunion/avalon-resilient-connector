# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for avalon"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the avalon package"""
    reload_params = {"package": u"avalon",
                    "incident_fields": [u"avalon_auto_refresh", u"avalon_last_pull_time", u"avalon_workspace_id"], 
                    "action_fields": [], 
                    "function_params": [u"incident_id", u"incident_name"], 
                    "datatables": [], 
                    "message_destinations": [u"avalon_actions"], 
                    "functions": [u"avalon_refresh"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"avalon_refresh"], 
                    "actions": [u"Avalon: Create Workspace", u"Avalon: Pull Nodes", u"Avalon: Push Artifact", u"Avalon: Push Artifacts", u"Avalon: Start Auto-refresh Workflow", u"Avalon: Stop Auto-refresh Workflow"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Incident fields:
    #     avalon_auto_refresh
    #     avalon_last_pull_time
    #     avalon_workspace_id
    #   Function inputs:
    #     incident_id
    #     incident_name
    #   Message Destinations:
    #     avalon_actions
    #   Functions:
    #     avalon_refresh
    #   Workflows:
    #     avalon_refresh
    #   Rules:
    #     Avalon: Create Workspace
    #     Avalon: Pull Nodes
    #     Avalon: Push Artifact
    #     Avalon: Push Artifacts
    #     Avalon: Start Auto-refresh Workflow
    #     Avalon: Stop Auto-refresh Workflow


    yield ImportDefinition(u"""
eyJpZCI6IDI4LCAiZmllbGRzIjogW3siY2hvc2VuIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNl
LCAidXVpZCI6ICI1N2NkMjcyYi1jMDExLTQ4N2EtOGIwMS04YTczYmYyMzBhMzAiLCAib3BlcmF0
aW9ucyI6IFtdLCAidmFsdWVzIjogW10sICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogODIsICJu
YW1lIjogImF2YWxvbl9sYXN0X3B1bGxfdGltZSIsICJ0ZXh0IjogIkF2YWxvbjogTGFzdCBQdWxs
IFRpbWUiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDAsICJ0b29sdGlwIjog
IlRpbWUgb2YgdGhlIGxhc3QgcHVsbCBmcm9tIEF2YWxvbiIsICJwbGFjZWhvbGRlciI6ICIiLCAi
aW5wdXRfdHlwZSI6ICJkYXRldGltZXBpY2tlciIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNl
LCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxz
ZSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQi
OiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvYXZhbG9uX2xhc3RfcHVsbF90aW1lIiwg
InRlbXBsYXRlcyI6IFtdfSwgeyJjaG9zZW4iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1
dWlkIjogIjA2YTJhYjhmLTdkNjktNDk2Yi1iMWZhLTBmNjc5YTU2MzNhNiIsICJvcGVyYXRpb25z
IjogW10sICJ2YWx1ZXMiOiBbXSwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiA4MSwgIm5hbWUi
OiAiYXZhbG9uX2F1dG9fcmVmcmVzaCIsICJ0ZXh0IjogIkF2YWxvbjogQXV0byBSZWZyZXNoIiwg
InByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJTZXQgdG8g
WWVzIHRvIGF1dG9tYXRpY2FsbHkgcHVsbCBub2RlcyBmcm9tIEF2YWxvbiBldmVyeSA2MCBtaW51
dGVzIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAi
Ymxhbmtfb3B0aW9uIjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25seSI6
IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lkZW50L2F2YWxv
bl9hdXRvX3JlZnJlc2giLCAidGVtcGxhdGVzIjogW119LCB7ImNob3NlbiI6IGZhbHNlLCAiaW50
ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiMzJlNTgxZmEtMmU2ZC00OTU0LThiMGUtZjU2NjNjMWY1
OWY0IiwgIm9wZXJhdGlvbnMiOiBbXSwgInZhbHVlcyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJpZCI6IDgwLCAibmFtZSI6ICJhdmFsb25fd29ya3NwYWNlX2lkIiwgInRleHQiOiAiQXZhbG9u
OiBXb3Jrc3BhY2UgSUQiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDAsICJ0
b29sdGlwIjogIkVudGVyIEF2YWxvbiBXb3Jrc3BhY2UgSUQgdG8gbGluayBpdCB0byB0aGlzIElu
Y2lkZW50ICAiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAibnVtYmVyIiwgImhp
ZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJyZWFkX29u
bHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9h
dmFsb25fd29ya3NwYWNlX2lkIiwgInRlbXBsYXRlcyI6IFtdfSwgeyJjaG9zZW4iOiBmYWxzZSwg
ImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImVhZmNiODY5LWZjNTctNDcxZS1hNDM2LTBiMjZj
ZDZiMDVmMyIsICJvcGVyYXRpb25zIjogW10sICJ2YWx1ZXMiOiBbXSwgImNoYW5nZWFibGUiOiB0
cnVlLCAiaWQiOiA4MywgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAidGV4dCI6ICJpbmNpZGVudF9p
ZCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICJJbmNpZGVudCBJ
RCIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAicmVxdWlyZWQi
OiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAib3BlcmF0aW9uX3Blcm1z
Ijoge30sICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tl
eSI6ICJfX2Z1bmN0aW9uL2luY2lkZW50X2lkIiwgInRlbXBsYXRlcyI6IFtdfSwgeyJjaG9zZW4i
OiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjdiZmY3NDE5LWVjMTItNDQ4ZS1i
NGQyLTViYTNmNzVhZjUxZCIsICJvcGVyYXRpb25zIjogW10sICJ2YWx1ZXMiOiBbXSwgImNoYW5n
ZWFibGUiOiB0cnVlLCAiaWQiOiA4NCwgIm5hbWUiOiAiaW5jaWRlbnRfbmFtZSIsICJ0ZXh0Ijog
ImluY2lkZW50X25hbWUiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAi
OiAiSW5jaWRlbnQgTmFtZSIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0
IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIi
OiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJy
ZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1
bmN0aW9uL2luY2lkZW50X25hbWUiLCAidGVtcGxhdGVzIjogW119XSwgInBoYXNlcyI6IFtdLCAi
b3ZlcnJpZGVzIjogW10sICJhY3Rpb25zIjogW3siaWQiOiAxOCwgIm5hbWUiOiAiQXZhbG9uOiBD
cmVhdGUgV29ya3NwYWNlIiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAi
Y29uZGl0aW9ucyI6IFt7Im1ldGhvZCI6ICJub3RfaGFzX2FfdmFsdWUiLCAiZmllbGRfbmFtZSI6
ICJpbmNpZGVudC5wcm9wZXJ0aWVzLmF2YWxvbl93b3Jrc3BhY2VfaWQiLCAidmFsdWUiOiBudWxs
LCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbH1dLCAiYXV0b21hdGlvbnMiOiBb
XSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogWyJhdmFsb25fYWN0aW9ucyJdLCAid29ya2Zsb3dz
IjogW10sICJ2aWV3X2l0ZW1zIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQi
OiAiMjYxZjZhZDItYmE2OC00Y2QxLWFkMjMtNmI1ZmI5Y2NjNjliIiwgImV4cG9ydF9rZXkiOiAi
QXZhbG9uOiBDcmVhdGUgV29ya3NwYWNlIiwgImxvZ2ljX3R5cGUiOiAiYWxsIn0sIHsiaWQiOiAx
OSwgIm5hbWUiOiAiQXZhbG9uOiBQdWxsIE5vZGVzIiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUi
OiAiaW5jaWRlbnQiLCAiY29uZGl0aW9ucyI6IFt7Im1ldGhvZCI6ICJoYXNfYV92YWx1ZSIsICJm
aWVsZF9uYW1lIjogImluY2lkZW50LnByb3BlcnRpZXMuYXZhbG9uX3dvcmtzcGFjZV9pZCIsICJ2
YWx1ZSI6IG51bGwsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsfV0sICJhdXRv
bWF0aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbImF2YWxvbl9hY3Rpb25zIl0s
ICJ3b3JrZmxvd3MiOiBbXSwgInZpZXdfaXRlbXMiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2
NDAwLCAidXVpZCI6ICJhZmNmOTE4My04NGE5LTRjOGEtOGFhYy04NTEwYWQwMjk3MDAiLCAiZXhw
b3J0X2tleSI6ICJBdmFsb246IFB1bGwgTm9kZXMiLCAibG9naWNfdHlwZSI6ICJhbGwifSwgeyJp
ZCI6IDE3LCAibmFtZSI6ICJBdmFsb246IFB1c2ggQXJ0aWZhY3QiLCAidHlwZSI6IDEsICJvYmpl
Y3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjogW3sibWV0aG9kIjogImhhc19hX3Zh
bHVlIiwgImZpZWxkX25hbWUiOiAiaW5jaWRlbnQucHJvcGVydGllcy5hdmFsb25fd29ya3NwYWNl
X2lkIiwgInZhbHVlIjogbnVsbCwgInR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IDR9LCB7
Im1ldGhvZCI6ICJub3RfY29udGFpbnMiLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC5kZXNjcmlw
dGlvbiIsICJ2YWx1ZSI6ICJBdmFsb24iLCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjog
M30sIHsibWV0aG9kIjogImVxdWFscyIsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAi
dmFsdWUiOiAiSVAgQWRkcmVzcyIsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiAyfSwg
eyJtZXRob2QiOiAiZXF1YWxzIiwgImZpZWxkX25hbWUiOiAiYXJ0aWZhY3QudHlwZSIsICJ2YWx1
ZSI6ICJETlMgTmFtZSIsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiAxfV0sICJhdXRv
bWF0aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbImF2YWxvbl9hY3Rpb25zIl0s
ICJ3b3JrZmxvd3MiOiBbXSwgInZpZXdfaXRlbXMiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2
NDAwLCAidXVpZCI6ICJlOTA4NzhkOC1iYzVkLTQ4YjYtODFjZC00MTQ4NDE1ZThiNTMiLCAiZXhw
b3J0X2tleSI6ICJBdmFsb246IFB1c2ggQXJ0aWZhY3QiLCAibG9naWNfdHlwZSI6ICJhZHZhbmNl
ZCIsICJjdXN0b21fY29uZGl0aW9uIjogIjQgQU5EICgxIE9SIDIpIEFORCAzIn0sIHsiaWQiOiAy
MCwgIm5hbWUiOiAiQXZhbG9uOiBQdXNoIEFydGlmYWN0cyIsICJ0eXBlIjogMSwgIm9iamVjdF90
eXBlIjogImluY2lkZW50IiwgImNvbmRpdGlvbnMiOiBbeyJtZXRob2QiOiAiaGFzX2FfdmFsdWUi
LCAiZmllbGRfbmFtZSI6ICJpbmNpZGVudC5wcm9wZXJ0aWVzLmF2YWxvbl93b3Jrc3BhY2VfaWQi
LCAidmFsdWUiOiBudWxsLCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbH1dLCAi
YXV0b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogWyJhdmFsb25fYWN0aW9u
cyJdLCAid29ya2Zsb3dzIjogW10sICJ2aWV3X2l0ZW1zIjogW10sICJ0aW1lb3V0X3NlY29uZHMi
OiA4NjQwMCwgInV1aWQiOiAiNGI1MWIwYzgtM2QyOS00YzFjLTk0MTMtNzEwOWM4ZGQ1YzUyIiwg
ImV4cG9ydF9rZXkiOiAiQXZhbG9uOiBQdXNoIEFydGlmYWN0cyIsICJsb2dpY190eXBlIjogImFs
bCJ9LCB7ImlkIjogMjEsICJuYW1lIjogIkF2YWxvbjogU3RhcnQgQXV0by1yZWZyZXNoIFdvcmtm
bG93IiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiY29uZGl0aW9ucyI6
IFt7Im1ldGhvZCI6ICJub3RfZXF1YWxzIiwgImZpZWxkX25hbWUiOiAiaW5jaWRlbnQucHJvcGVy
dGllcy5hdmFsb25fYXV0b19yZWZyZXNoIiwgInZhbHVlIjogdHJ1ZSwgInR5cGUiOiBudWxsLCAi
ZXZhbHVhdGlvbl9pZCI6IG51bGx9LCB7Im1ldGhvZCI6ICJoYXNfYV92YWx1ZSIsICJmaWVsZF9u
YW1lIjogImluY2lkZW50LnByb3BlcnRpZXMuYXZhbG9uX3dvcmtzcGFjZV9pZCIsICJ2YWx1ZSI6
IG51bGwsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsfV0sICJhdXRvbWF0aW9u
cyI6IFt7InR5cGUiOiAibW9kaWZ5X2ZpZWxkIiwgInR5cGVfaWQiOiAiaW5jaWRlbnQiLCAiZmll
bGQiOiAiYXZhbG9uX2F1dG9fcmVmcmVzaCIsICJvcGVyYXRpb24iOiAic2V0X2ZpZWxkIiwgInZh
bHVlIjogdHJ1ZX1dLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIndvcmtmbG93cyI6IFsi
YXZhbG9uX3JlZnJlc2giXSwgInZpZXdfaXRlbXMiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2
NDAwLCAidXVpZCI6ICI1MjQyMDliOS1hNjk2LTQ4MWUtYjljYy1kZGQwMThiYzQxOTkiLCAiZXhw
b3J0X2tleSI6ICJBdmFsb246IFN0YXJ0IEF1dG8tcmVmcmVzaCBXb3JrZmxvdyIsICJsb2dpY190
eXBlIjogImFsbCJ9LCB7ImlkIjogMjIsICJuYW1lIjogIkF2YWxvbjogU3RvcCBBdXRvLXJlZnJl
c2ggV29ya2Zsb3ciLCAidHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJjb25k
aXRpb25zIjogW3sibWV0aG9kIjogImVxdWFscyIsICJmaWVsZF9uYW1lIjogImluY2lkZW50LnBy
b3BlcnRpZXMuYXZhbG9uX2F1dG9fcmVmcmVzaCIsICJ2YWx1ZSI6IHRydWUsICJ0eXBlIjogbnVs
bCwgImV2YWx1YXRpb25faWQiOiBudWxsfV0sICJhdXRvbWF0aW9ucyI6IFtdLCAibWVzc2FnZV9k
ZXN0aW5hdGlvbnMiOiBbImF2YWxvbl9hY3Rpb25zIl0sICJ3b3JrZmxvd3MiOiBbXSwgInZpZXdf
aXRlbXMiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICJjYzZmY2Y5Ny0y
Y2FiLTRmYzgtOWEyMi1mMjA0MDk1NDRjM2EiLCAiZXhwb3J0X2tleSI6ICJBdmFsb246IFN0b3Ag
QXV0by1yZWZyZXNoIFdvcmtmbG93IiwgImxvZ2ljX3R5cGUiOiAiYWxsIn1dLCAibGF5b3V0cyI6
IFtdLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJ0aW1lZnJhbWVzIjogbnVsbCwgImluZHVzdHJp
ZXMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJnZW9zIjogbnVsbCwgImZ1bmN0aW9ucyI6
IFt7ImlkIjogMiwgIm5hbWUiOiAiYXZhbG9uX3JlZnJlc2giLCAiZGVzY3JpcHRpb24iOiB7ImZv
cm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiUHVsbHMgZGF0YSBmcm9tIGEgbGlua2VkIEF2YWxv
biB3b3Jrc3BhY2UuIFJlcXVpcmVzIGFuIEF2YWxvbiBXb3Jrc3BhY2UgYXJ0aWZhY3QgdG8gYmUg
cHJlc2VudCBpbiB0aGUgaW5jaWRlbnQuIEF2YWxvbiBXb3Jrc3BhY2UgYXJ0aWZhY3QgY2FuIGJl
IGNyZWF0ZWQgd2l0aCB0aGUgXCJBdmFsb246IENyZWF0ZSBXb3Jrc3BhY2VcIiBjdXN0b20gbWVu
dSBjb21tYW5kLiJ9LCAidXVpZCI6ICI0YmNjMmRmMS1jNjBjLTRmNjItODc5YS0wMjRjYjE1MGEx
OWUiLCAidmVyc2lvbiI6IDUsICJjcmVhdG9yIjogeyJpZCI6IDEsICJ0eXBlIjogInVzZXIiLCAi
bmFtZSI6ICJ2YWxAa2luZ2FuZHVuaW9uLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiVmFsIEthbnRj
aGV2In0sICJ3b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwg
IndvcmtmbG93X2lkIjogNCwgIm5hbWUiOiAiQXZhbG9uOiBSZWZyZXNoIiwgInByb2dyYW1tYXRp
Y19uYW1lIjogImF2YWxvbl9yZWZyZXNoIiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImFj
dGlvbnMiOiBbXX1dLCAiZGlzcGxheV9uYW1lIjogImF2YWxvbl9yZWZyZXNoIiwgImRlc3RpbmF0
aW9uX2hhbmRsZSI6ICJhdmFsb25fYWN0aW9ucyIsICJleHBvcnRfa2V5IjogImF2YWxvbl9yZWZy
ZXNoIiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImlkIjogMSwgInR5cGUiOiAidXNlciIsICJuYW1l
IjogInZhbEBraW5nYW5kdW5pb24uY29tIiwgImRpc3BsYXlfbmFtZSI6ICJWYWwgS2FudGNoZXYi
fSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NDY2Mzg0MTEzNzgsICJ2aWV3X2l0ZW1zIjogW3si
c3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVp
ZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICJlYWZjYjg2OS1mYzU3
LTQ3MWUtYTQzNi0wYjI2Y2Q2YjA1ZjMiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJz
dGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlk
IiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogIjdiZmY3NDE5LWVjMTIt
NDQ4ZS1iNGQyLTViYTNmNzVhZjUxZCIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9XX1dLCAi
c2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzAsICJtaW5vciI6IDAsICJidWlsZF9udW1iZXIi
OiAzNDc2LCAidmVyc2lvbiI6ICIzMC4wLjM0NzYifSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6
IDIsICJleHBvcnRfZGF0ZSI6IDE1NDY5MDUwMDU2MjUsICJpbmNpZGVudF90eXBlcyI6IFt7InVw
ZGF0ZV9kYXRlIjogMTU0NjkwNDk4NjAwMSwgImNyZWF0ZV9kYXRlIjogMTU0NjkwNDk4NjAwMSwg
InV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImRlc2NyaXB0
aW9uIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5Ijog
IkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJuYW1lIjogIkN1c3RvbWl6YXRp
b24gUGFja2FnZXMgKGludGVybmFsKSIsICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0iOiBmYWxz
ZSwgInBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4iOiBmYWxzZSwgImlkIjogMH1dLCAiYXV0b21h
dGljX3Rhc2tzIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7Im5hbWUiOiAiYXZhbG9u
X2FjdGlvbnMiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiYXZhbG9uX2FjdGlvbnMiLCAiZGVzdGlu
YXRpb25fdHlwZSI6IDAsICJleHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJ2YWxAa2luZ2Fu
ZHVuaW9uLmNvbSJdLCAidXVpZCI6ICJjMzMyNTBmNC03ODExLTQ1YjUtODU4Yi1kNTk3ZDIyNjlj
ODEiLCAiZXhwb3J0X2tleSI6ICJhdmFsb25fYWN0aW9ucyJ9XSwgInRhc2tfb3JkZXIiOiBbXSwg
ImFjdGlvbl9vcmRlciI6IFtdLCAidHlwZXMiOiBbXSwgInNjcmlwdHMiOiBbXSwgImluY2lkZW50
X2FydGlmYWN0X3R5cGVzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlvbiI6ICJQdWxs
cyBkYXRhIGZyb20gbGlua2VkIEF2YWxvbiB3b3Jrc3BhY2UuIFJlcXVpcmVzIGFuIEF2YWxvbiBX
b3Jrc3BhY2UgdG8gYmUgbGlua2VkIHRvIGFuIGluY2lkZW50LiBZb3UgY2FuIGNyZWF0ZSBhbmQg
bGluayBhbiBBdmFsb24gd29ya3NwYWNlIGFydGlmYWN0IGJ5IGV4ZWN1dGluZyB0aGUgXCJBdmFs
b246IENyZWF0ZSBXb3Jrc3BhY2VcIiBjdXN0b20gbWVudSBjb21tYW5kLiIsICJ1dWlkIjogImQz
OGM2NzFmLWZjMzktNDc0MS1iMDE3LTczNGYwMWJlMTY3YyIsICJ3b3JrZmxvd19pZCI6IDQsICJu
YW1lIjogIkF2YWxvbjogUmVmcmVzaCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJhdmFsb25fcmVm
cmVzaCIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJjcmVhdG9yX2lkIjogInZhbEBraW5n
YW5kdW5pb24uY29tIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAidmFsQGtpbmdhbmR1bmlvbi5jb20i
LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU0NjkwMjYzMTYxNiwgImV4cG9ydF9rZXkiOiAiYXZh
bG9uX3JlZnJlc2giLCAiY29udGVudCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBl
bmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9y
Zy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9t
Zy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9t
Zy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcu
b3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxp
ZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1M
U2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5z
dGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48
cHJvY2VzcyBpZD1cImF2YWxvbl9yZWZyZXNoXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9
XCJBdmFsb246IFJlZnJlc2hcIj48ZG9jdW1lbnRhdGlvbj48IVtDREFUQVtQdWxscyBkYXRhIGZy
b20gbGlua2VkIEF2YWxvbiB3b3Jrc3BhY2UuIFJlcXVpcmVzIGFuIEF2YWxvbiBXb3Jrc3BhY2Ug
dG8gYmUgbGlua2VkIHRvIGFuIGluY2lkZW50LiBZb3UgY2FuIGNyZWF0ZSBhbmQgbGluayBhbiBB
dmFsb24gd29ya3NwYWNlIGFydGlmYWN0IGJ5IGV4ZWN1dGluZyB0aGUgXCJBdmFsb246IENyZWF0
ZSBXb3Jrc3BhY2VcIiBjdXN0b20gbWVudSBjb21tYW5kLl1dPjwvZG9jdW1lbnRhdGlvbj48c3Rh
cnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMXl0azg5Z1wiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3df
MGljbnZkejwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VU
YXNrXzEzeXM4YzVcIiBuYW1lPVwiYXZhbG9uX3JlZnJlc2hcIiByZXNpbGllbnQ6dHlwZT1cImZ1
bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjRi
Y2MyZGYxLWM2MGMtNGY2Mi04NzlhLTAyNGNiMTUwYTE5ZVwiPntcImlucHV0c1wiOnt9LFwicHJl
X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuaW5jaWRlbnRfaWQgPSBpbmNpZGVudC5pZFxc
bmlucHV0cy5pbmNpZGVudF9uYW1lID0gaW5jaWRlbnQubmFtZVwiLFwicmVzdWx0X25hbWVcIjpc
IlwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNl
cXVlbmNlRmxvd18xa2FqdWx6PC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzBxOWli
eG08L291dGdvaW5nPjwvc2VydmljZVRhc2s+PGluY2x1c2l2ZUdhdGV3YXkgaWQ9XCJJbmNsdXNp
dmVHYXRld2F5XzFyd3I4dWpcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBpY252ZHo8L2luY29t
aW5nPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHE5aWJ4bTwvaW5jb21pbmc+PG91dGdvaW5nPlNl
cXVlbmNlRmxvd18xa2FqdWx6PC9vdXRnb2luZz48L2luY2x1c2l2ZUdhdGV3YXk+PHNlcXVlbmNl
RmxvdyBpZD1cIlNlcXVlbmNlRmxvd18waWNudmR6XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8x
eXRrODlnXCIgdGFyZ2V0UmVmPVwiSW5jbHVzaXZlR2F0ZXdheV8xcndyOHVqXCIvPjxzZXF1ZW5j
ZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHE5aWJ4bVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNr
XzEzeXM4YzVcIiB0YXJnZXRSZWY9XCJJbmNsdXNpdmVHYXRld2F5XzFyd3I4dWpcIi8+PHNlcXVl
bmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xa2FqdWx6XCIgc291cmNlUmVmPVwiSW5jbHVzaXZl
R2F0ZXdheV8xcndyOHVqXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMTN5czhjNVwiLz48L3By
b2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQ
TU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMXl0azg5Z1wiIGlkPVwiU3Rh
cnRFdmVudF8xeXRrODlnX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiMTE4XCIgeT1cIjIwM1wiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9XCI5MVwiIHk9XCIyNDJcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIlNlcnZpY2VUYXNrXzEzeXM4YzVcIiBpZD1cIlNlcnZpY2VUYXNrXzEzeXM4YzVfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzQwXCIgeT1cIjI1
XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIklu
Y2x1c2l2ZUdhdGV3YXlfMXJ3cjh1alwiIGlkPVwiSW5jbHVzaXZlR2F0ZXdheV8xcndyOHVqX2Rp
XCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI1MFwiIHdpZHRoPVwiNTBcIiB4PVwiMjE3XCIgeT1c
IjIxNFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lk
dGg9XCIwXCIgeD1cIjI0MlwiIHk9XCIyNjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBp
Y252ZHpcIiBpZD1cIlNlcXVlbmNlRmxvd18waWNudmR6X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCIxNTRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMVwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjE4NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIxXCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiMTg2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMzlcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIyMTdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIzOVwi
Lz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIw
XCIgeD1cIjIwMVwiIHk9XCIyMjMuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBN
TkVkZ2U+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18wcTlpYnht
XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHE5aWJ4bV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzQw
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI2NVwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjI0MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiNjVcIi8+PG9tZ2RpOndheXBvaW50
IHg9XCIyNDJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxNFwiLz48YnBtbmRpOkJQ
TU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9XCIyNDZc
IiB5PVwiNDMuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5k
aTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xa2FqdWx6XCIgaWQ9XCJTZXF1
ZW5jZUZsb3dfMWthanVsel9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMjY3XCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyMzlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MjNcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIzOVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQyM1wi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTU4XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
MzkwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNThcIi8+PG9tZ2RpOndheXBvaW50
IHg9XCIzOTBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEwNVwiLz48YnBtbmRpOkJQ
TU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9XCIzOTNc
IiB5PVwiMTkyXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5k
aTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVyc2lv
biI6IDQwLCAid29ya2Zsb3dfaWQiOiAiYXZhbG9uX3JlZnJlc2gifSwgImFjdGlvbnMiOiBbXX1d
LCAicm9sZXMiOiBbXSwgIndvcmtzcGFjZXMiOiBbXX0=
"""
    )