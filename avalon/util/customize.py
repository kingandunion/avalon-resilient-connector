# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for avalon"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the avalon package"""
    reload_params = {"package": u"avalon",
                    "incident_fields": [u"avalon_auto_refresh", u"avalon_last_pull_time", u"avalon_workspace_id"], 
                    "action_fields": [], 
                    "function_params": [u"incident_id", u"incident_name"], 
                    "datatables": [], 
                    "message_destinations": [u"avalon_actions"], 
                    "functions": [u"avalon_refresh"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"avalon_refresh"], 
                    "actions": [u"Avalon: Create Workspace", u"Avalon: Pull Nodes", u"Avalon: Push Artifact", u"Avalon: Push Artifacts", u"Avalon: Start Auto-refresh Workflow", u"Avalon: Stop Auto-refresh Workflow"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Incident fields:
    #     avalon_auto_refresh
    #     avalon_last_pull_time
    #     avalon_workspace_id
    #   Function inputs:
    #     incident_id
    #     incident_name
    #   Message Destinations:
    #     avalon_actions
    #   Functions:
    #     avalon_refresh
    #   Workflows:
    #     avalon_refresh
    #   Rules:
    #     Avalon: Create Workspace
    #     Avalon: Pull Nodes
    #     Avalon: Push Artifact
    #     Avalon: Push Artifacts
    #     Avalon: Start Auto-refresh Workflow
    #     Avalon: Stop Auto-refresh Workflow


    yield ImportDefinition(u"""
eyJpZCI6IDI5LCAiZmllbGRzIjogW3siY2hvc2VuIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNl
LCAidXVpZCI6ICI1N2NkMjcyYi1jMDExLTQ4N2EtOGIwMS04YTczYmYyMzBhMzAiLCAib3BlcmF0
aW9ucyI6IFtdLCAidmFsdWVzIjogW10sICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogODIsICJu
YW1lIjogImF2YWxvbl9sYXN0X3B1bGxfdGltZSIsICJ0ZXh0IjogIkF2YWxvbjogTGFzdCBQdWxs
IFRpbWUiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDAsICJ0b29sdGlwIjog
IlRpbWUgb2YgdGhlIGxhc3QgcHVsbCBmcm9tIEF2YWxvbiIsICJwbGFjZWhvbGRlciI6ICIiLCAi
aW5wdXRfdHlwZSI6ICJkYXRldGltZXBpY2tlciIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNl
LCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxz
ZSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQi
OiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvYXZhbG9uX2xhc3RfcHVsbF90aW1lIiwg
InRlbXBsYXRlcyI6IFtdfSwgeyJjaG9zZW4iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1
dWlkIjogIjA2YTJhYjhmLTdkNjktNDk2Yi1iMWZhLTBmNjc5YTU2MzNhNiIsICJvcGVyYXRpb25z
IjogW10sICJ2YWx1ZXMiOiBbXSwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiA4MSwgIm5hbWUi
OiAiYXZhbG9uX2F1dG9fcmVmcmVzaCIsICJ0ZXh0IjogIkF2YWxvbjogQXV0byBSZWZyZXNoIiwg
InByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJTZXQgdG8g
WWVzIHRvIGF1dG9tYXRpY2FsbHkgcHVsbCBub2RlcyBmcm9tIEF2YWxvbiBldmVyeSA2MCBtaW51
dGVzIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAi
Ymxhbmtfb3B0aW9uIjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25seSI6
IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lkZW50L2F2YWxv
bl9hdXRvX3JlZnJlc2giLCAidGVtcGxhdGVzIjogW119LCB7ImNob3NlbiI6IGZhbHNlLCAiaW50
ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiMzJlNTgxZmEtMmU2ZC00OTU0LThiMGUtZjU2NjNjMWY1
OWY0IiwgIm9wZXJhdGlvbnMiOiBbXSwgInZhbHVlcyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJpZCI6IDgwLCAibmFtZSI6ICJhdmFsb25fd29ya3NwYWNlX2lkIiwgInRleHQiOiAiQXZhbG9u
OiBXb3Jrc3BhY2UgSUQiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDAsICJ0
b29sdGlwIjogIkVudGVyIEF2YWxvbiBXb3Jrc3BhY2UgSUQgdG8gbGluayBpdCB0byB0aGlzIElu
Y2lkZW50ICAiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAibnVtYmVyIiwgImhp
ZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJyZWFkX29u
bHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9h
dmFsb25fd29ya3NwYWNlX2lkIiwgInRlbXBsYXRlcyI6IFtdfSwgeyJjaG9zZW4iOiBmYWxzZSwg
ImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjdiZmY3NDE5LWVjMTItNDQ4ZS1iNGQyLTViYTNm
NzVhZjUxZCIsICJvcGVyYXRpb25zIjogW10sICJ2YWx1ZXMiOiBbXSwgImNoYW5nZWFibGUiOiB0
cnVlLCAiaWQiOiA4NCwgIm5hbWUiOiAiaW5jaWRlbnRfbmFtZSIsICJ0ZXh0IjogImluY2lkZW50
X25hbWUiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiSW5jaWRl
bnQgTmFtZSIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVf
bm90aWZpY2F0aW9uIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
ImJsYW5rX29wdGlvbiI6IGZhbHNlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJyZWFkX29ubHki
OiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2lu
Y2lkZW50X25hbWUiLCAidGVtcGxhdGVzIjogW119LCB7ImNob3NlbiI6IGZhbHNlLCAiaW50ZXJu
YWwiOiBmYWxzZSwgInV1aWQiOiAiZWFmY2I4NjktZmM1Ny00NzFlLWE0MzYtMGIyNmNkNmIwNWYz
IiwgIm9wZXJhdGlvbnMiOiBbXSwgInZhbHVlcyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUsICJp
ZCI6IDgzLCAibmFtZSI6ICJpbmNpZGVudF9pZCIsICJ0ZXh0IjogImluY2lkZW50X2lkIiwgInBy
ZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIkluY2lkZW50IElEIiwgInBs
YWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJyZXF1aXJlZCI6ICJhbHdh
eXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZl
ciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
InJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9f
ZnVuY3Rpb24vaW5jaWRlbnRfaWQiLCAidGVtcGxhdGVzIjogW119XSwgInBoYXNlcyI6IFtdLCAi
b3ZlcnJpZGVzIjogW10sICJhY3Rpb25zIjogW3siaWQiOiAxOCwgIm5hbWUiOiAiQXZhbG9uOiBD
cmVhdGUgV29ya3NwYWNlIiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAi
Y29uZGl0aW9ucyI6IFt7Im1ldGhvZCI6ICJub3RfaGFzX2FfdmFsdWUiLCAiZmllbGRfbmFtZSI6
ICJpbmNpZGVudC5wcm9wZXJ0aWVzLmF2YWxvbl93b3Jrc3BhY2VfaWQiLCAidmFsdWUiOiBudWxs
LCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbH1dLCAiYXV0b21hdGlvbnMiOiBb
XSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogWyJhdmFsb25fYWN0aW9ucyJdLCAid29ya2Zsb3dz
IjogW10sICJ2aWV3X2l0ZW1zIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQi
OiAiMjYxZjZhZDItYmE2OC00Y2QxLWFkMjMtNmI1ZmI5Y2NjNjliIiwgImV4cG9ydF9rZXkiOiAi
QXZhbG9uOiBDcmVhdGUgV29ya3NwYWNlIiwgImxvZ2ljX3R5cGUiOiAiYWxsIn0sIHsiaWQiOiAx
OSwgIm5hbWUiOiAiQXZhbG9uOiBQdWxsIE5vZGVzIiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUi
OiAiaW5jaWRlbnQiLCAiY29uZGl0aW9ucyI6IFt7Im1ldGhvZCI6ICJoYXNfYV92YWx1ZSIsICJm
aWVsZF9uYW1lIjogImluY2lkZW50LnByb3BlcnRpZXMuYXZhbG9uX3dvcmtzcGFjZV9pZCIsICJ2
YWx1ZSI6IG51bGwsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsfV0sICJhdXRv
bWF0aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbImF2YWxvbl9hY3Rpb25zIl0s
ICJ3b3JrZmxvd3MiOiBbXSwgInZpZXdfaXRlbXMiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2
NDAwLCAidXVpZCI6ICJhZmNmOTE4My04NGE5LTRjOGEtOGFhYy04NTEwYWQwMjk3MDAiLCAiZXhw
b3J0X2tleSI6ICJBdmFsb246IFB1bGwgTm9kZXMiLCAibG9naWNfdHlwZSI6ICJhbGwifSwgeyJp
ZCI6IDE3LCAibmFtZSI6ICJBdmFsb246IFB1c2ggQXJ0aWZhY3QiLCAidHlwZSI6IDEsICJvYmpl
Y3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjogW3sibWV0aG9kIjogImluIiwgImZp
ZWxkX25hbWUiOiAiYXJ0aWZhY3QudHlwZSIsICJ2YWx1ZSI6IFsiSVAgQWRkcmVzcyIsICJETlMg
TmFtZSIsICJVUkwiLCAiTWFsd2FyZSBNRDUgSGFzaCIsICJNYWx3YXJlIFNIQS0xIEhhc2giLCAi
TWFsd2FyZSBTSEEtMjU2IEhhc2giXSwgInR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51
bGx9LCB7Im1ldGhvZCI6ICJoYXNfYV92YWx1ZSIsICJmaWVsZF9uYW1lIjogImluY2lkZW50LnBy
b3BlcnRpZXMuYXZhbG9uX3dvcmtzcGFjZV9pZCIsICJ2YWx1ZSI6IG51bGwsICJ0eXBlIjogbnVs
bCwgImV2YWx1YXRpb25faWQiOiBudWxsfSwgeyJtZXRob2QiOiAibm90X2NvbnRhaW5zIiwgImZp
ZWxkX25hbWUiOiAiYXJ0aWZhY3QuZGVzY3JpcHRpb24iLCAidmFsdWUiOiAiQXZhbG9uIiwgInR5
cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGx9XSwgImF1dG9tYXRpb25zIjogW10sICJt
ZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFsiYXZhbG9uX2FjdGlvbnMiXSwgIndvcmtmbG93cyI6IFtd
LCAidmlld19pdGVtcyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImU5
MDg3OGQ4LWJjNWQtNDhiNi04MWNkLTQxNDg0MTVlOGI1MyIsICJleHBvcnRfa2V5IjogIkF2YWxv
bjogUHVzaCBBcnRpZmFjdCIsICJsb2dpY190eXBlIjogImFsbCJ9LCB7ImlkIjogMjAsICJuYW1l
IjogIkF2YWxvbjogUHVzaCBBcnRpZmFjdHMiLCAidHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJp
bmNpZGVudCIsICJjb25kaXRpb25zIjogW3sibWV0aG9kIjogImhhc19hX3ZhbHVlIiwgImZpZWxk
X25hbWUiOiAiaW5jaWRlbnQucHJvcGVydGllcy5hdmFsb25fd29ya3NwYWNlX2lkIiwgInZhbHVl
IjogbnVsbCwgInR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGx9XSwgImF1dG9tYXRp
b25zIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFsiYXZhbG9uX2FjdGlvbnMiXSwgIndv
cmtmbG93cyI6IFtdLCAidmlld19pdGVtcyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAs
ICJ1dWlkIjogIjRiNTFiMGM4LTNkMjktNGMxYy05NDEzLTcxMDljOGRkNWM1MiIsICJleHBvcnRf
a2V5IjogIkF2YWxvbjogUHVzaCBBcnRpZmFjdHMiLCAibG9naWNfdHlwZSI6ICJhbGwifSwgeyJp
ZCI6IDIxLCAibmFtZSI6ICJBdmFsb246IFN0YXJ0IEF1dG8tcmVmcmVzaCBXb3JrZmxvdyIsICJ0
eXBlIjogMSwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImNvbmRpdGlvbnMiOiBbeyJtZXRo
b2QiOiAiaGFzX2FfdmFsdWUiLCAiZmllbGRfbmFtZSI6ICJpbmNpZGVudC5wcm9wZXJ0aWVzLmF2
YWxvbl93b3Jrc3BhY2VfaWQiLCAidmFsdWUiOiBudWxsLCAidHlwZSI6IG51bGwsICJldmFsdWF0
aW9uX2lkIjogbnVsbH0sIHsibWV0aG9kIjogIm5vdF9lcXVhbHMiLCAiZmllbGRfbmFtZSI6ICJp
bmNpZGVudC5wcm9wZXJ0aWVzLmF2YWxvbl9hdXRvX3JlZnJlc2giLCAidmFsdWUiOiB0cnVlLCAi
dHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbH1dLCAiYXV0b21hdGlvbnMiOiBbeyJ0
eXBlIjogIm1vZGlmeV9maWVsZCIsICJ0eXBlX2lkIjogImluY2lkZW50IiwgImZpZWxkIjogImF2
YWxvbl9hdXRvX3JlZnJlc2giLCAib3BlcmF0aW9uIjogInNldF9maWVsZCIsICJ2YWx1ZSI6IHRy
dWV9XSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJ3b3JrZmxvd3MiOiBbImF2YWxvbl9y
ZWZyZXNoIl0sICJ2aWV3X2l0ZW1zIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1
aWQiOiAiNTI0MjA5YjktYTY5Ni00ODFlLWI5Y2MtZGRkMDE4YmM0MTk5IiwgImV4cG9ydF9rZXki
OiAiQXZhbG9uOiBTdGFydCBBdXRvLXJlZnJlc2ggV29ya2Zsb3ciLCAibG9naWNfdHlwZSI6ICJh
bGwifSwgeyJpZCI6IDIyLCAibmFtZSI6ICJBdmFsb246IFN0b3AgQXV0by1yZWZyZXNoIFdvcmtm
bG93IiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiY29uZGl0aW9ucyI6
IFt7Im1ldGhvZCI6ICJlcXVhbHMiLCAiZmllbGRfbmFtZSI6ICJpbmNpZGVudC5wcm9wZXJ0aWVz
LmF2YWxvbl9hdXRvX3JlZnJlc2giLCAidmFsdWUiOiB0cnVlLCAidHlwZSI6IG51bGwsICJldmFs
dWF0aW9uX2lkIjogbnVsbH1dLCAiYXV0b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRp
b25zIjogWyJhdmFsb25fYWN0aW9ucyJdLCAid29ya2Zsb3dzIjogW10sICJ2aWV3X2l0ZW1zIjog
W10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiY2M2ZmNmOTctMmNhYi00ZmM4
LTlhMjItZjIwNDA5NTQ0YzNhIiwgImV4cG9ydF9rZXkiOiAiQXZhbG9uOiBTdG9wIEF1dG8tcmVm
cmVzaCBXb3JrZmxvdyIsICJsb2dpY190eXBlIjogImFsbCJ9XSwgImxheW91dHMiOiBbXSwgIm5v
dGlmaWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGwsICJpbmR1c3RyaWVzIjogbnVs
bCwgInJlZ3VsYXRvcnMiOiBudWxsLCAiZ2VvcyI6IG51bGwsICJmdW5jdGlvbnMiOiBbeyJpZCI6
IDIsICJuYW1lIjogImF2YWxvbl9yZWZyZXNoIiwgImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAi
dGV4dCIsICJjb250ZW50IjogIlB1bGxzIGRhdGEgZnJvbSBhIGxpbmtlZCBBdmFsb24gd29ya3Nw
YWNlLiBSZXF1aXJlcyBhbiBBdmFsb24gV29ya3NwYWNlIGFydGlmYWN0IHRvIGJlIHByZXNlbnQg
aW4gdGhlIGluY2lkZW50LiBBdmFsb24gV29ya3NwYWNlIGFydGlmYWN0IGNhbiBiZSBjcmVhdGVk
IHdpdGggdGhlIFwiQXZhbG9uOiBDcmVhdGUgV29ya3NwYWNlXCIgY3VzdG9tIG1lbnUgY29tbWFu
ZC4ifSwgInV1aWQiOiAiNGJjYzJkZjEtYzYwYy00ZjYyLTg3OWEtMDI0Y2IxNTBhMTllIiwgInZl
cnNpb24iOiA1LCAiY3JlYXRvciI6IHsiaWQiOiAxLCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAi
dmFsQGtpbmdhbmR1bmlvbi5jb20iLCAiZGlzcGxheV9uYW1lIjogIlZhbCBLYW50Y2hldiJ9LCAi
d29ya2Zsb3dzIjogW3siZGVzY3JpcHRpb24iOiBudWxsLCAidXVpZCI6IG51bGwsICJ3b3JrZmxv
d19pZCI6IDQsICJuYW1lIjogIkF2YWxvbjogUmVmcmVzaCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6
ICJhdmFsb25fcmVmcmVzaCIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJhY3Rpb25zIjog
W119XSwgImRpc3BsYXlfbmFtZSI6ICJhdmFsb25fcmVmcmVzaCIsICJkZXN0aW5hdGlvbl9oYW5k
bGUiOiAiYXZhbG9uX2FjdGlvbnMiLCAiZXhwb3J0X2tleSI6ICJhdmFsb25fcmVmcmVzaCIsICJs
YXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDEsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJ2YWxA
a2luZ2FuZHVuaW9uLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiVmFsIEthbnRjaGV2In0sICJsYXN0
X21vZGlmaWVkX3RpbWUiOiAxNTQ2NjM4NDExMzc4LCAidmlld19pdGVtcyI6IFt7InN0ZXBfbGFi
ZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmll
bGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiZWFmY2I4NjktZmM1Ny00NzFlLWE0
MzYtMGIyNmNkNmIwNWYzIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJl
bCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVs
ZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICI3YmZmNzQxOS1lYzEyLTQ0OGUtYjRk
Mi01YmEzZjc1YWY1MWQiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV19XSwgInNlcnZlcl92
ZXJzaW9uIjogeyJtYWpvciI6IDMwLCAibWlub3IiOiAwLCAiYnVpbGRfbnVtYmVyIjogMzQ3Niwg
InZlcnNpb24iOiAiMzAuMC4zNDc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAyLCAiZXhw
b3J0X2RhdGUiOiAxNTQ4MDgzNjc2MDExLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0
ZSI6IDE1NDgwODM4MzA4ODgsICJjcmVhdGVfZGF0ZSI6IDE1NDgwODM4MzA4ODgsICJ1dWlkIjog
ImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJD
dXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21p
emF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2th
Z2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJl
bnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgImF1dG9tYXRpY190YXNr
cyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbeyJuYW1lIjogImF2YWxvbl9hY3Rpb25z
IiwgInByb2dyYW1tYXRpY19uYW1lIjogImF2YWxvbl9hY3Rpb25zIiwgImRlc3RpbmF0aW9uX3R5
cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsidmFsQGtpbmdhbmR1bmlvbi5j
b20iXSwgInV1aWQiOiAiYzMzMjUwZjQtNzgxMS00NWI1LTg1OGItZDU5N2QyMjY5YzgxIiwgImV4
cG9ydF9rZXkiOiAiYXZhbG9uX2FjdGlvbnMifV0sICJ0YXNrX29yZGVyIjogW10sICJhY3Rpb25f
b3JkZXIiOiBbXSwgInR5cGVzIjogW10sICJzY3JpcHRzIjogW10sICJpbmNpZGVudF9hcnRpZmFj
dF90eXBlcyI6IFtdLCAid29ya2Zsb3dzIjogW3siZGVzY3JpcHRpb24iOiAiUHVsbHMgZGF0YSBm
cm9tIGxpbmtlZCBBdmFsb24gd29ya3NwYWNlLiBSZXF1aXJlcyBhbiBBdmFsb24gV29ya3NwYWNl
IHRvIGJlIGxpbmtlZCB0byBhbiBpbmNpZGVudC4gWW91IGNhbiBjcmVhdGUgYW5kIGxpbmsgYW4g
QXZhbG9uIHdvcmtzcGFjZSBhcnRpZmFjdCBieSBleGVjdXRpbmcgdGhlIFwiQXZhbG9uOiBDcmVh
dGUgV29ya3NwYWNlXCIgY3VzdG9tIG1lbnUgY29tbWFuZC4iLCAidXVpZCI6ICJkMzhjNjcxZi1m
YzM5LTQ3NDEtYjAxNy03MzRmMDFiZTE2N2MiLCAid29ya2Zsb3dfaWQiOiA0LCAibmFtZSI6ICJB
dmFsb246IFJlZnJlc2giLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiYXZhbG9uX3JlZnJlc2giLCAi
b2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiY3JlYXRvcl9pZCI6ICJ2YWxAa2luZ2FuZHVuaW9u
LmNvbSIsICJsYXN0X21vZGlmaWVkX2J5IjogInZhbEBraW5nYW5kdW5pb24uY29tIiwgImxhc3Rf
bW9kaWZpZWRfdGltZSI6IDE1NDY5MDI2MzE2MTYsICJleHBvcnRfa2V5IjogImF2YWxvbl9yZWZy
ZXNoIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9
XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9C
UE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVj
L0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0u
Y29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwi
IHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIg
dGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3Mg
aWQ9XCJhdmFsb25fcmVmcmVzaFwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiQXZhbG9u
OiBSZWZyZXNoXCI+PGRvY3VtZW50YXRpb24+PCFbQ0RBVEFbUHVsbHMgZGF0YSBmcm9tIGxpbmtl
ZCBBdmFsb24gd29ya3NwYWNlLiBSZXF1aXJlcyBhbiBBdmFsb24gV29ya3NwYWNlIHRvIGJlIGxp
bmtlZCB0byBhbiBpbmNpZGVudC4gWW91IGNhbiBjcmVhdGUgYW5kIGxpbmsgYW4gQXZhbG9uIHdv
cmtzcGFjZSBhcnRpZmFjdCBieSBleGVjdXRpbmcgdGhlIFwiQXZhbG9uOiBDcmVhdGUgV29ya3Nw
YWNlXCIgY3VzdG9tIG1lbnUgY29tbWFuZC5dXT48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQg
aWQ9XCJTdGFydEV2ZW50XzF5dGs4OWdcIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzBpY252ZHo8
L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xM3lz
OGM1XCIgbmFtZT1cImF2YWxvbl9yZWZyZXNoXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwi
PjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI0YmNjMmRmMS1j
NjBjLTRmNjItODc5YS0wMjRjYjE1MGExOWVcIj57XCJpbnB1dHNcIjp7fSxcInByZV9wcm9jZXNz
aW5nX3NjcmlwdFwiOlwiaW5wdXRzLmluY2lkZW50X2lkID0gaW5jaWRlbnQuaWRcXG5pbnB1dHMu
aW5jaWRlbnRfbmFtZSA9IGluY2lkZW50Lm5hbWVcIixcInJlc3VsdF9uYW1lXCI6XCJcIn08L3Jl
c2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZs
b3dfMWthanVsejwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wcTlpYnhtPC9vdXRn
b2luZz48L3NlcnZpY2VUYXNrPjxpbmNsdXNpdmVHYXRld2F5IGlkPVwiSW5jbHVzaXZlR2F0ZXdh
eV8xcndyOHVqXCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18waWNudmR6PC9pbmNvbWluZz48aW5j
b21pbmc+U2VxdWVuY2VGbG93XzBxOWlieG08L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZs
b3dfMWthanVsejwvb3V0Z29pbmc+PC9pbmNsdXNpdmVHYXRld2F5PjxzZXF1ZW5jZUZsb3cgaWQ9
XCJTZXF1ZW5jZUZsb3dfMGljbnZkelwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMXl0azg5Z1wi
IHRhcmdldFJlZj1cIkluY2x1c2l2ZUdhdGV3YXlfMXJ3cjh1alwiLz48c2VxdWVuY2VGbG93IGlk
PVwiU2VxdWVuY2VGbG93XzBxOWlieG1cIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xM3lzOGM1
XCIgdGFyZ2V0UmVmPVwiSW5jbHVzaXZlR2F0ZXdheV8xcndyOHVqXCIvPjxzZXF1ZW5jZUZsb3cg
aWQ9XCJTZXF1ZW5jZUZsb3dfMWthanVselwiIHNvdXJjZVJlZj1cIkluY2x1c2l2ZUdhdGV3YXlf
MXJ3cjh1alwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzEzeXM4YzVcIi8+PC9wcm9jZXNzPjxi
cG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUg
YnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzF5dGs4OWdcIiBpZD1cIlN0YXJ0RXZlbnRf
MXl0azg5Z19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1c
IjExOFwiIHk9XCIyMDNcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiOTFcIiB5PVwiMjQyXCIvPjwvYnBtbmRpOkJQTU5MYWJl
bD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2
aWNlVGFza18xM3lzOGM1XCIgaWQ9XCJTZXJ2aWNlVGFza18xM3lzOGM1X2RpXCI+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjM0MFwiIHk9XCIyNVwiLz48L2Jw
bW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJJbmNsdXNpdmVH
YXRld2F5XzFyd3I4dWpcIiBpZD1cIkluY2x1c2l2ZUdhdGV3YXlfMXJ3cjh1al9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiNTBcIiB3aWR0aD1cIjUwXCIgeD1cIjIxN1wiIHk9XCIyMTRcIi8+
PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwi
IHg9XCIyNDJcIiB5PVwiMjY3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hh
cGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18waWNudmR6XCIg
aWQ9XCJTZXF1ZW5jZUZsb3dfMGljbnZkel9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTU0XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjFcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIx
ODZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMVwiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjE4NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjM5XCIvPjxvbWdkaTp3YXlw
b2ludCB4PVwiMjE3XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMzlcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIy
MDFcIiB5PVwiMjIzLjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHE5aWJ4bVwiIGlkPVwi
U2VxdWVuY2VGbG93XzBxOWlieG1fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM0MFwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiNjVcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyNDJcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjY1XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjQy
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMTRcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiMjQ2XCIgeT1cIjQz
LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMWthanVselwiIGlkPVwiU2VxdWVuY2VGbG93
XzFrYWp1bHpfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjI2N1wiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjM5XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDIzXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMzlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MjNcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE1OFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM5MFwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTU4XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzkw
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMDVcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiMzkzXCIgeT1cIjE5
MlwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBs
YW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiA0MCwg
IndvcmtmbG93X2lkIjogImF2YWxvbl9yZWZyZXNoIn0sICJhY3Rpb25zIjogW119XSwgInJvbGVz
IjogW10sICJ3b3Jrc3BhY2VzIjogW119
"""
    )